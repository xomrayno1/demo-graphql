type Query{
	getStudentAll(name: String): [Student],
	getStudentSearchPagination(ssp: StudentSearchPagination): APIResponse
	getStudent(id: Int): StudentResponse
	loadArray(loads: [String]): [String]
}

type Mutation{
	createStudent(csr: CreateStudentRequest): APIResponseCreate
}
input StudentSearchPagination{
	name: String,
	limit: Int!,
	currentPage: Int!
}

type APIResponse{
	data: Data,
	message: String,
	status: Int
}

type APIResponseCreate{
	data: StudentResponse,
	message: String,
	status: Int
}

type Data {
	data : [StudentResponse],
	pagination : Pagination
}
 
type StudentResponse{
	id: Int,
	name: String,
	codeStudent: String,
	address: String,
	email: String
}
type Pagination {
	totalRows: Int,
	currentPage: Int
}

type Student{
	id: Int,
	name: String,
	codeStudent: String,
	address: String,
	email: String
}
input CreateStudentRequest{
	name: String,
	codeStudent: String,
	address: String,
	email: String
}
